---
resource_types:
- name: semver-depth
  type: docker-image
  source:
    repository: quay.io/antonu17/semver-resource-depth

- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr

- name: gh-release-62
  type: docker-image
  source:
    repository: concourse/github-release-resource
    tag: pr-62

- name: gh-release-dev
  type: docker-image
  source:
    repository: quay.io/antonu17/github-release-resource
    tag: dev

resources:
- name: master
  type: git
  source:
    uri: ((github_uri))
    branch: master
    private_key: ((github_ssh_key))

- name: release-tag
  type: git
  source:
    uri: ((github_uri))
    branch: master
    private_key: ((github_ssh_key))
    tag_filter: '*-release'

- name: gh-release-candidate
  type: github-release
  source:
    owner: ((github_owner))
    repository: ((github_repo))
    access_token: ((github_token))
    release: false
    pre_release: true

- name: gh-release-final
  type: github-release
  source:
    owner: ((github_owner))
    repository: ((github_repo))
    access_token: ((github_token))
    release: true
    pre_release: false

- name: gh-release-draft
  type: github-release
  source:
    owner: ((github_owner))
    repository: ((github_repo))
    access_token: ((github_token))
    release: false
    pre_release: false
    drafts: true

- name: gh-release-draft-62
  type: gh-release-62
  source:
    owner: ((github_owner))
    repository: ((github_repo))
    access_token: ((github_token))
    release: false
    pre_release: false
    drafts: true

- name: gh-release-draft-dev
  type: gh-release-dev
  source:
    owner: ((github_owner))
    repository: ((github_repo))
    access_token: ((github_token))
    release: false
    pre_release: false
    drafts: true

- name: docker-image
  type: docker-image
  source:
    repository: quay.io/antonu17/concourse-playground
    username: ((quay_username))
    password: ((quay_password))

- name: version
  type: semver
  source:
    driver: git
    uri: ((github_uri))
    branch: version
    file: version  
    private_key: ((github_ssh_key))
    initial_version: 0.0.0
    depth: 1

- name: version-draft
  type: semver
  source:
    driver: git
    uri: ((github_uri))
    branch: version
    file: version-draft
    private_key: ((github_ssh_key))
    initial_version: 0.0.0
    depth: 1

- name: pr
  type: pull-request
  source:
    base: master
    uri: ((github_uri))
    repo: antonu17/concourse-playground
    access_token: ((github_token))
    private_key: ((github_ssh_key))

jobs:
- name: bump-version
  plan:
  - get: master
    trigger: true

  - put: version
    params:
      bump: patch
      pre: rc

- name: build-rc
  serial_groups: [ version ]
  plan:
  - get: master
    passed:
    - bump-version
    trigger: true

  - task: build-artifact
    file: master/ci/tasks/build-artifact.yml

  - get: version
    passed:
    - bump-version
    params:
      pre: rc

  - put: gh-release-candidate
    params:
      name: version/version
      tag: version/version
      globs:
      - artifacts/*.tgz

  - put: version
    params:
      file: version/version

  - task: prepare-docker-build-args
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: busybox
      inputs:
        - name: version
      output:
        - name: docker-build-args
      run:
        - /bin/sh
        - -c
        - echo "{ \"VERSION\": \"`cat version/version`}\"" > docker-build-args/args

  - put: docker-image
    params:
      tag: version/version
      tag_as_latest: true
      build_args_file: docker-build-args/args
      build: master

- name: promote-a-release
  serial_groups: [ version ]
  plan:
  - get: rc-version
    resource: version
    passed: [ build-rc ]

  - get: version
    passed: [ build-rc ]
    params:
      bump: final

  - get: gh-release-candidate
    passed: [ build-rc ]

  - put: gh-release-final
    params:
      name: version/version
      tag: version/version
      globs:
      - gh-release-candidate/*.tgz

  - get: docker-image
    params:
      save: true

  - put: docker-image
    params:
      load: docker-image
      load_tag: rc-version/version
      tag: version/version

  - put: version
    params:
      file: version/version

- name: deploy
  serial_groups: [ version ]
  plan:
  - get: version
    passed: [ promote-a-release ]
    trigger: true
  - get: master

  - task: alert-deployment-start
    file: master/ci/tasks/alert.yml
    params:
      MESSAGE: Deployment of version %s started\n

  - task: alert-deployment-finish
    file: master/ci/tasks/alert.yml
    params:
      MESSAGE: Deployment of version %s finished\n

- name: build-release-tag
  plan:
  - get: master
    resource: release-tag
    trigger: true

  - task: build-artifact
    file: master/ci/tasks/build-artifact.yml

# PR flow
- name: build-pr
  plan:
  - get: master
    resource: pr
    version: every
    trigger: true

  - put: version-draft
    params:
      bump: patch
  
  - task: build-artifact
    file: master/ci/tasks/build-artifact.yml

  - put: gh-release-draft-dev
    params:
      name: version-draft/number
      tag: artifacts/hash
      body: artifacts/body
      commitish: artifacts/target_commit
      globs:
      - artifacts/*.tgz

  - put: version-draft
    params:
      bump: patch

- name: print-draft-release-62
  plan:
    - get: gh-release-draft-62
      trigger: true

    - task: list-draft-release-62
      config:
        platform: linux

        image_resource:
          type: docker-image
          source:
            repository: alpine/git

        inputs:
        - name: gh-release-draft-62

        run:
          path: /bin/sh
          args:
            - -c
            - ls -lR .

- name: print-draft-release
  plan:
    - get: gh-release-draft
      trigger: true

    - task: list-draft-release
      config:
        platform: linux

        image_resource:
          type: docker-image
          source:
            repository: alpine/git

        inputs:
        - name: gh-release-draft

        run:
          path: /bin/sh
          args:
            - -c
            - ls -lR .

- name: print-draft-release-dev
  plan:
    - get: gh-release-draft-dev
      trigger: true

    - task: list-draft-release-dev
      config:
        platform: linux

        image_resource:
          type: docker-image
          source:
            repository: alpine/git

        inputs:
        - name: gh-release-draft-dev

        run:
          path: /bin/sh
          args:
            - -c
            - ls -lR .
