---
resource_types:
- name: semver-depth
  type: docker-image
  source:
    repository: quay.io/antonu17/semver-resource-depth

- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr

resources:
- name: master
  type: git
  source:
    uri: ((github_uri))
    branch: master
    private_key: ((github_ssh_key))

- name: release-tag
  type: git
  source:
    uri: ((github_uri))
    branch: master
    private_key: ((github_ssh_key))
    tag_filter: '*-release'

- name: gh-release-candidate
  type: github-release
  source:
    owner: ((github_owner))
    repository: ((github_repo))
    access_token: ((github_token))
    release: false
    pre_release: true

- name: gh-release-final
  type: github-release
  source:
    owner: ((github_owner))
    repository: ((github_repo))
    access_token: ((github_token))
    release: true
    pre_release: false

- name: gh-release-draft
  type: github-release
  source:
    owner: ((github_owner))
    repository: ((github_repo))
    access_token: ((github_token))
    release: false
    pre_release: false
    drafts: true

- name: version
  type: semver
  source:
    driver: git
    uri: ((github_uri))
    branch: version
    file: version  
    private_key: ((github_ssh_key))
    initial_version: 0.0.0
    depth: 1

- name: version-draft
  type: semver
  source:
    driver: git
    uri: ((github_uri))
    branch: version
    file: version-draft
    private_key: ((github_ssh_key))
    initial_version: 0.0.0
    depth: 1

- name: pr
  type: pull-request
  source:
    base: master
    uri: ((github_uri))
    repo: antonu17/concourse-playground
    access_token: ((github_token))
    private_key: ((github_ssh_key))

jobs:
- name: bump-version
  plan:
  - get: master
    trigger: true

  - put: version
    params:
      bump: patch
      pre: rc

- name: build-rc
  serial_groups: [ version ]
  plan:
  - get: master
    passed:
    - bump-version
    trigger: true

  - task: build-artifact
    file: master/ci/tasks/build-artifact.yml

  - get: version
    passed:
    - bump-version
    params:
      pre: rc

  - put: gh-release-candidate
    params:
      name: version/version
      tag: version/version
      globs:
      - artifacts/*.tgz

  - put: version
    params:
      file: version/version

- name: promote-a-release
  serial_groups: [ version ]
  plan:
  - get: version
    passed: [ build-rc ]
    params:
      bump: final

  - get: gh-release-candidate
    passed: [ build-rc ]

  - put: gh-release-final
    params:
      name: version/version
      tag: version/version
      globs:
      - gh-release-candidate/*.tgz

  - put: version
    params:
      file: version/version

- name: deploy
  serial_groups: [ version ]
  plan:
  - get: version
    passed: [ promote-a-release ]
    trigger: true
  - get: master

  - task: alert-deployment-start
    file: master/ci/tasks/alert.yml
    params:
      MESSAGE: Deployment of version %s started\n

  - task: alert-deployment-finish
    file: master/ci/tasks/alert.yml
    params:
      MESSAGE: Deployment of version %s finished\n

- name: build-release-tag
  plan:
  - get: master
    resource: release-tag
    trigger: true

  - task: build-artifact
    file: master/ci/tasks/build-artifact.yml

# PR flow
- name: build-pr
  plan:
  - get: master
    resource: pr
    version: every
    trigger: true

  - put: version-draft
    params:
      bump: patch
  
  - task: build-artifact
    file: master/ci/tasks/build-artifact.yml

  - put: gh-release-draft
    params:
      name: version-draft/number
      tag: artifacts/hash
      body: artifacts/body
      target_commit: artifacts/target_commit
      globs:
      - artifacts/*.tgz

  - put: version-draft
    params:
      bump: patch

  - put: gh-release-draft
    params:
      name: version-draft/number
      tag: version-draft/number
      target_commit: artifacts/target_commit
      globs:
      - artifacts/*.tgz
